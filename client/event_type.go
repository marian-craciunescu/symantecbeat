package client

type EventType int

const (
	ALL EventType = iota
	AGENT_FRAMEWORK
	APP_CONTROL
	APP_CONTROL_LITE
	APP_CONTROL_WHITELIST
	APP_ISOLATION
	BEHAVIORAL_ANALYSIS
	COMPLIANCE
	DATA_PROTECTION
	DECEPTION
	DETECTION_MONITORING
	DETECTION_RESPONSE
	DEVICE_CONTROL
	EXPLOIT_PROTECTION
	FIREWALL
	LOCATION_MANAGEMENT
	MALWARE_PROTECTION
	NETWORK_INTEGRITY
	NETWORK_IPS
	POLICY_MANAGER
	ROAMING_CLIENT
	TAMPER_PROTECTION
	TDAD_PROTECT
	TELEMETRY
	VR_ASSESSMENT
	VR_REMEDIATION
	WEB_SECURITY
)

var AllTypes = []EventType{
	ALL,
	AGENT_FRAMEWORK,
	APP_CONTROL,
	APP_CONTROL_LITE,
	APP_CONTROL_WHITELIST,
	APP_ISOLATION,
	BEHAVIORAL_ANALYSIS,
	COMPLIANCE,
	DATA_PROTECTION,
	DECEPTION,
	DETECTION_MONITORING,
	DETECTION_RESPONSE,
	DEVICE_CONTROL,
	EXPLOIT_PROTECTION,
	FIREWALL,
	LOCATION_MANAGEMENT,
	MALWARE_PROTECTION,
	NETWORK_INTEGRITY,
	NETWORK_IPS,
	POLICY_MANAGER,
	ROAMING_CLIENT,
	TAMPER_PROTECTION,
	TDAD_PROTECT,
	TELEMETRY,
	VR_ASSESSMENT,
	VR_REMEDIATION,
	WEB_SECURITY,
}

func (t EventType) String() string {
	names := [...]string{
		"ALL",
		"AGENT FRAMEWORK",
		"APP CONTROL",
		"APP CONTROL LITE",
		"APP CONTROL WHITELIST",
		"APP ISOLATION",
		"BEHAVIORAL ANALYSIS",
		"COMPLIANCE",
		"DATA PROTECTION",
		"DECEPTION",
		"DETECTION MONITORING",
		"DETECTION RESPONSE",
		"DEVICE CONTROL",
		"EXPLOIT PROTECTION",
		"FIREWALL",
		"LOCATION MANAGEMENT",
		"MALWARE PROTECTION",
		"NETWORK INTEGRITY",
		"NETWORK IPS",
		"POLICY MANAGER",
		"ROAMING CLIENT",
		"TAMPER PROTECTION",
		"TDAD PROTECT",
		"TELEMETRY",
		"VR ASSESSMENT",
		"VR REMEDIATION",
		"WEB SECURITY",
	}

	if t < ALL || t > WEB_SECURITY {
		return "Unknown"
	}
	return names[t]
}
